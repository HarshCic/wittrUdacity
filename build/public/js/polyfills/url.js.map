{"version":3,"sources":["node_modules/browser-pack/_prelude.js","public/js/polyfills/url.js"],"names":[],"mappings":"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","file":"url.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","/* Any copyright is dedicated to the Public Domain.\r\n * http://creativecommons.org/publicdomain/zero/1.0/ */\r\n\r\n(function(scope) {\r\n  'use strict';\r\n\r\n  // feature detect for URL constructor\r\n  var hasWorkingUrl = false;\r\n  if (!scope.forceJURL) {\r\n    try {\r\n      var u = new URL('b', 'http://a');\r\n      u.pathname = 'c%20d';\r\n      hasWorkingUrl = u.href === 'http://a/c%20d';\r\n    } catch(e) {}\r\n  }\r\n\r\n  if (hasWorkingUrl)\r\n    return;\r\n\r\n  var relative = Object.create(null);\r\n  relative['ftp'] = 21;\r\n  relative['file'] = 0;\r\n  relative['gopher'] = 70;\r\n  relative['http'] = 80;\r\n  relative['https'] = 443;\r\n  relative['ws'] = 80;\r\n  relative['wss'] = 443;\r\n\r\n  var relativePathDotMapping = Object.create(null);\r\n  relativePathDotMapping['%2e'] = '.';\r\n  relativePathDotMapping['.%2e'] = '..';\r\n  relativePathDotMapping['%2e.'] = '..';\r\n  relativePathDotMapping['%2e%2e'] = '..';\r\n\r\n  function isRelativeScheme(scheme) {\r\n    return relative[scheme] !== undefined;\r\n  }\r\n\r\n  function invalid() {\r\n    clear.call(this);\r\n    this._isInvalid = true;\r\n  }\r\n\r\n  function IDNAToASCII(h) {\r\n    if ('' == h) {\r\n      invalid.call(this)\r\n    }\r\n    // XXX\r\n    return h.toLowerCase()\r\n  }\r\n\r\n  function percentEscape(c) {\r\n    var unicode = c.charCodeAt(0);\r\n    if (unicode > 0x20 &&\r\n       unicode < 0x7F &&\r\n       // \" # < > ? `\r\n       [0x22, 0x23, 0x3C, 0x3E, 0x3F, 0x60].indexOf(unicode) == -1\r\n      ) {\r\n      return c;\r\n    }\r\n    return encodeURIComponent(c);\r\n  }\r\n\r\n  function percentEscapeQuery(c) {\r\n    // XXX This actually needs to encode c using encoding and then\r\n    // convert the bytes one-by-one.\r\n\r\n    var unicode = c.charCodeAt(0);\r\n    if (unicode > 0x20 &&\r\n       unicode < 0x7F &&\r\n       // \" # < > ` (do not escape '?')\r\n       [0x22, 0x23, 0x3C, 0x3E, 0x60].indexOf(unicode) == -1\r\n      ) {\r\n      return c;\r\n    }\r\n    return encodeURIComponent(c);\r\n  }\r\n\r\n  var EOF = undefined,\r\n      ALPHA = /[a-zA-Z]/,\r\n      ALPHANUMERIC = /[a-zA-Z0-9\\+\\-\\.]/;\r\n\r\n  function parse(input, stateOverride, base) {\r\n    function err(message) {\r\n      errors.push(message)\r\n    }\r\n\r\n    var state = stateOverride || 'scheme start',\r\n        cursor = 0,\r\n        buffer = '',\r\n        seenAt = false,\r\n        seenBracket = false,\r\n        errors = [];\r\n\r\n    loop: while ((input[cursor - 1] != EOF || cursor == 0) && !this._isInvalid) {\r\n      var c = input[cursor];\r\n      switch (state) {\r\n        case 'scheme start':\r\n          if (c && ALPHA.test(c)) {\r\n            buffer += c.toLowerCase(); // ASCII-safe\r\n            state = 'scheme';\r\n          } else if (!stateOverride) {\r\n            buffer = '';\r\n            state = 'no scheme';\r\n            continue;\r\n          } else {\r\n            err('Invalid scheme.');\r\n            break loop;\r\n          }\r\n          break;\r\n\r\n        case 'scheme':\r\n          if (c && ALPHANUMERIC.test(c)) {\r\n            buffer += c.toLowerCase(); // ASCII-safe\r\n          } else if (':' == c) {\r\n            this._scheme = buffer;\r\n            buffer = '';\r\n            if (stateOverride) {\r\n              break loop;\r\n            }\r\n            if (isRelativeScheme(this._scheme)) {\r\n              this._isRelative = true;\r\n            }\r\n            if ('file' == this._scheme) {\r\n              state = 'relative';\r\n            } else if (this._isRelative && base && base._scheme == this._scheme) {\r\n              state = 'relative or authority';\r\n            } else if (this._isRelative) {\r\n              state = 'authority first slash';\r\n            } else {\r\n              state = 'scheme data';\r\n            }\r\n          } else if (!stateOverride) {\r\n            buffer = '';\r\n            cursor = 0;\r\n            state = 'no scheme';\r\n            continue;\r\n          } else if (EOF == c) {\r\n            break loop;\r\n          } else {\r\n            err('Code point not allowed in scheme: ' + c)\r\n            break loop;\r\n          }\r\n          break;\r\n\r\n        case 'scheme data':\r\n          if ('?' == c) {\r\n            query = '?';\r\n            state = 'query';\r\n          } else if ('#' == c) {\r\n            this._fragment = '#';\r\n            state = 'fragment';\r\n          } else {\r\n            // XXX error handling\r\n            if (EOF != c && '\\t' != c && '\\n' != c && '\\r' != c) {\r\n              this._schemeData += percentEscape(c);\r\n            }\r\n          }\r\n          break;\r\n\r\n        case 'no scheme':\r\n          if (!base || !(isRelativeScheme(base._scheme))) {\r\n            err('Missing scheme.');\r\n            invalid.call(this);\r\n          } else {\r\n            state = 'relative';\r\n            continue;\r\n          }\r\n          break;\r\n\r\n        case 'relative or authority':\r\n          if ('/' == c && '/' == input[cursor+1]) {\r\n            state = 'authority ignore slashes';\r\n          } else {\r\n            err('Expected /, got: ' + c);\r\n            state = 'relative';\r\n            continue\r\n          }\r\n          break;\r\n\r\n        case 'relative':\r\n          this._isRelative = true;\r\n          if ('file' != this._scheme)\r\n            this._scheme = base._scheme;\r\n          if (EOF == c) {\r\n            this._host = base._host;\r\n            this._port = base._port;\r\n            this._path = base._path.slice();\r\n            this._query = base._query;\r\n            this._username = base._username;\r\n            this._password = base._password;\r\n            break loop;\r\n          } else if ('/' == c || '\\\\' == c) {\r\n            if ('\\\\' == c)\r\n              err('\\\\ is an invalid code point.');\r\n            state = 'relative slash';\r\n          } else if ('?' == c) {\r\n            this._host = base._host;\r\n            this._port = base._port;\r\n            this._path = base._path.slice();\r\n            this._query = '?';\r\n            this._username = base._username;\r\n            this._password = base._password;\r\n            state = 'query';\r\n          } else if ('#' == c) {\r\n            this._host = base._host;\r\n            this._port = base._port;\r\n            this._path = base._path.slice();\r\n            this._query = base._query;\r\n            this._fragment = '#';\r\n            this._username = base._username;\r\n            this._password = base._password;\r\n            state = 'fragment';\r\n          } else {\r\n            var nextC = input[cursor+1]\r\n            var nextNextC = input[cursor+2]\r\n            if (\r\n              'file' != this._scheme || !ALPHA.test(c) ||\r\n              (nextC != ':' && nextC != '|') ||\r\n              (EOF != nextNextC && '/' != nextNextC && '\\\\' != nextNextC && '?' != nextNextC && '#' != nextNextC)) {\r\n              this._host = base._host;\r\n              this._port = base._port;\r\n              this._username = base._username;\r\n              this._password = base._password;\r\n              this._path = base._path.slice();\r\n              this._path.pop();\r\n            }\r\n            state = 'relative path';\r\n            continue;\r\n          }\r\n          break;\r\n\r\n        case 'relative slash':\r\n          if ('/' == c || '\\\\' == c) {\r\n            if ('\\\\' == c) {\r\n              err('\\\\ is an invalid code point.');\r\n            }\r\n            if ('file' == this._scheme) {\r\n              state = 'file host';\r\n            } else {\r\n              state = 'authority ignore slashes';\r\n            }\r\n          } else {\r\n            if ('file' != this._scheme) {\r\n              this._host = base._host;\r\n              this._port = base._port;\r\n              this._username = base._username;\r\n              this._password = base._password;\r\n            }\r\n            state = 'relative path';\r\n            continue;\r\n          }\r\n          break;\r\n\r\n        case 'authority first slash':\r\n          if ('/' == c) {\r\n            state = 'authority second slash';\r\n          } else {\r\n            err(\"Expected '/', got: \" + c);\r\n            state = 'authority ignore slashes';\r\n            continue;\r\n          }\r\n          break;\r\n\r\n        case 'authority second slash':\r\n          state = 'authority ignore slashes';\r\n          if ('/' != c) {\r\n            err(\"Expected '/', got: \" + c);\r\n            continue;\r\n          }\r\n          break;\r\n\r\n        case 'authority ignore slashes':\r\n          if ('/' != c && '\\\\' != c) {\r\n            state = 'authority';\r\n            continue;\r\n          } else {\r\n            err('Expected authority, got: ' + c);\r\n          }\r\n          break;\r\n\r\n        case 'authority':\r\n          if ('@' == c) {\r\n            if (seenAt) {\r\n              err('@ already seen.');\r\n              buffer += '%40';\r\n            }\r\n            seenAt = true;\r\n            for (var i = 0; i < buffer.length; i++) {\r\n              var cp = buffer[i];\r\n              if ('\\t' == cp || '\\n' == cp || '\\r' == cp) {\r\n                err('Invalid whitespace in authority.');\r\n                continue;\r\n              }\r\n              // XXX check URL code points\r\n              if (':' == cp && null === this._password) {\r\n                this._password = '';\r\n                continue;\r\n              }\r\n              var tempC = percentEscape(cp);\r\n              (null !== this._password) ? this._password += tempC : this._username += tempC;\r\n            }\r\n            buffer = '';\r\n          } else if (EOF == c || '/' == c || '\\\\' == c || '?' == c || '#' == c) {\r\n            cursor -= buffer.length;\r\n            buffer = '';\r\n            state = 'host';\r\n            continue;\r\n          } else {\r\n            buffer += c;\r\n          }\r\n          break;\r\n\r\n        case 'file host':\r\n          if (EOF == c || '/' == c || '\\\\' == c || '?' == c || '#' == c) {\r\n            if (buffer.length == 2 && ALPHA.test(buffer[0]) && (buffer[1] == ':' || buffer[1] == '|')) {\r\n              state = 'relative path';\r\n            } else if (buffer.length == 0) {\r\n              state = 'relative path start';\r\n            } else {\r\n              this._host = IDNAToASCII.call(this, buffer);\r\n              buffer = '';\r\n              state = 'relative path start';\r\n            }\r\n            continue;\r\n          } else if ('\\t' == c || '\\n' == c || '\\r' == c) {\r\n            err('Invalid whitespace in file host.');\r\n          } else {\r\n            buffer += c;\r\n          }\r\n          break;\r\n\r\n        case 'host':\r\n        case 'hostname':\r\n          if (':' == c && !seenBracket) {\r\n            // XXX host parsing\r\n            this._host = IDNAToASCII.call(this, buffer);\r\n            buffer = '';\r\n            state = 'port';\r\n            if ('hostname' == stateOverride) {\r\n              break loop;\r\n            }\r\n          } else if (EOF == c || '/' == c || '\\\\' == c || '?' == c || '#' == c) {\r\n            this._host = IDNAToASCII.call(this, buffer);\r\n            buffer = '';\r\n            state = 'relative path start';\r\n            if (stateOverride) {\r\n              break loop;\r\n            }\r\n            continue;\r\n          } else if ('\\t' != c && '\\n' != c && '\\r' != c) {\r\n            if ('[' == c) {\r\n              seenBracket = true;\r\n            } else if (']' == c) {\r\n              seenBracket = false;\r\n            }\r\n            buffer += c;\r\n          } else {\r\n            err('Invalid code point in host/hostname: ' + c);\r\n          }\r\n          break;\r\n\r\n        case 'port':\r\n          if (/[0-9]/.test(c)) {\r\n            buffer += c;\r\n          } else if (EOF == c || '/' == c || '\\\\' == c || '?' == c || '#' == c || stateOverride) {\r\n            if ('' != buffer) {\r\n              var temp = parseInt(buffer, 10);\r\n              if (temp != relative[this._scheme]) {\r\n                this._port = temp + '';\r\n              }\r\n              buffer = '';\r\n            }\r\n            if (stateOverride) {\r\n              break loop;\r\n            }\r\n            state = 'relative path start';\r\n            continue;\r\n          } else if ('\\t' == c || '\\n' == c || '\\r' == c) {\r\n            err('Invalid code point in port: ' + c);\r\n          } else {\r\n            invalid.call(this);\r\n          }\r\n          break;\r\n\r\n        case 'relative path start':\r\n          if ('\\\\' == c)\r\n            err(\"'\\\\' not allowed in path.\");\r\n          state = 'relative path';\r\n          if ('/' != c && '\\\\' != c) {\r\n            continue;\r\n          }\r\n          break;\r\n\r\n        case 'relative path':\r\n          if (EOF == c || '/' == c || '\\\\' == c || (!stateOverride && ('?' == c || '#' == c))) {\r\n            if ('\\\\' == c) {\r\n              err('\\\\ not allowed in relative path.');\r\n            }\r\n            var tmp;\r\n            if (tmp = relativePathDotMapping[buffer.toLowerCase()]) {\r\n              buffer = tmp;\r\n            }\r\n            if ('..' == buffer) {\r\n              this._path.pop();\r\n              if ('/' != c && '\\\\' != c) {\r\n                this._path.push('');\r\n              }\r\n            } else if ('.' == buffer && '/' != c && '\\\\' != c) {\r\n              this._path.push('');\r\n            } else if ('.' != buffer) {\r\n              if ('file' == this._scheme && this._path.length == 0 && buffer.length == 2 && ALPHA.test(buffer[0]) && buffer[1] == '|') {\r\n                buffer = buffer[0] + ':';\r\n              }\r\n              this._path.push(buffer);\r\n            }\r\n            buffer = '';\r\n            if ('?' == c) {\r\n              this._query = '?';\r\n              state = 'query';\r\n            } else if ('#' == c) {\r\n              this._fragment = '#';\r\n              state = 'fragment';\r\n            }\r\n          } else if ('\\t' != c && '\\n' != c && '\\r' != c) {\r\n            buffer += percentEscape(c);\r\n          }\r\n          break;\r\n\r\n        case 'query':\r\n          if (!stateOverride && '#' == c) {\r\n            this._fragment = '#';\r\n            state = 'fragment';\r\n          } else if (EOF != c && '\\t' != c && '\\n' != c && '\\r' != c) {\r\n            this._query += percentEscapeQuery(c);\r\n          }\r\n          break;\r\n\r\n        case 'fragment':\r\n          if (EOF != c && '\\t' != c && '\\n' != c && '\\r' != c) {\r\n            this._fragment += c;\r\n          }\r\n          break;\r\n      }\r\n\r\n      cursor++;\r\n    }\r\n  }\r\n\r\n  function clear() {\r\n    this._scheme = '';\r\n    this._schemeData = '';\r\n    this._username = '';\r\n    this._password = null;\r\n    this._host = '';\r\n    this._port = '';\r\n    this._path = [];\r\n    this._query = '';\r\n    this._fragment = '';\r\n    this._isInvalid = false;\r\n    this._isRelative = false;\r\n  }\r\n\r\n  // Does not process domain names or IP addresses.\r\n  // Does not handle encoding for the query parameter.\r\n  function jURL(url, base /* , encoding */) {\r\n    if (base !== undefined && !(base instanceof jURL))\r\n      base = new jURL(String(base));\r\n\r\n    this._url = url;\r\n    clear.call(this);\r\n\r\n    var input = url.replace(/^[ \\t\\r\\n\\f]+|[ \\t\\r\\n\\f]+$/g, '');\r\n    // encoding = encoding || 'utf-8'\r\n\r\n    parse.call(this, input, null, base);\r\n  }\r\n\r\n  jURL.prototype = {\r\n    toString: function() {\r\n      return this.href;\r\n    },\r\n    get href() {\r\n      if (this._isInvalid)\r\n        return this._url;\r\n\r\n      var authority = '';\r\n      if ('' != this._username || null != this._password) {\r\n        authority = this._username +\r\n            (null != this._password ? ':' + this._password : '') + '@';\r\n      }\r\n\r\n      return this.protocol +\r\n          (this._isRelative ? '//' + authority + this.host : '') +\r\n          this.pathname + this._query + this._fragment;\r\n    },\r\n    set href(href) {\r\n      clear.call(this);\r\n      parse.call(this, href);\r\n    },\r\n\r\n    get protocol() {\r\n      return this._scheme + ':';\r\n    },\r\n    set protocol(protocol) {\r\n      if (this._isInvalid)\r\n        return;\r\n      parse.call(this, protocol + ':', 'scheme start');\r\n    },\r\n\r\n    get host() {\r\n      return this._isInvalid ? '' : this._port ?\r\n          this._host + ':' + this._port : this._host;\r\n    },\r\n    set host(host) {\r\n      if (this._isInvalid || !this._isRelative)\r\n        return;\r\n      parse.call(this, host, 'host');\r\n    },\r\n\r\n    get hostname() {\r\n      return this._host;\r\n    },\r\n    set hostname(hostname) {\r\n      if (this._isInvalid || !this._isRelative)\r\n        return;\r\n      parse.call(this, hostname, 'hostname');\r\n    },\r\n\r\n    get port() {\r\n      return this._port;\r\n    },\r\n    set port(port) {\r\n      if (this._isInvalid || !this._isRelative)\r\n        return;\r\n      parse.call(this, port, 'port');\r\n    },\r\n\r\n    get pathname() {\r\n      return this._isInvalid ? '' : this._isRelative ?\r\n          '/' + this._path.join('/') : this._schemeData;\r\n    },\r\n    set pathname(pathname) {\r\n      if (this._isInvalid || !this._isRelative)\r\n        return;\r\n      this._path = [];\r\n      parse.call(this, pathname, 'relative path start');\r\n    },\r\n\r\n    get search() {\r\n      return this._isInvalid || !this._query || '?' == this._query ?\r\n          '' : this._query;\r\n    },\r\n    set search(search) {\r\n      if (this._isInvalid || !this._isRelative)\r\n        return;\r\n      this._query = '?';\r\n      if ('?' == search[0])\r\n        search = search.slice(1);\r\n      parse.call(this, search, 'query');\r\n    },\r\n\r\n    get hash() {\r\n      return this._isInvalid || !this._fragment || '#' == this._fragment ?\r\n          '' : this._fragment;\r\n    },\r\n    set hash(hash) {\r\n      if (this._isInvalid)\r\n        return;\r\n      this._fragment = '#';\r\n      if ('#' == hash[0])\r\n        hash = hash.slice(1);\r\n      parse.call(this, hash, 'fragment');\r\n    },\r\n\r\n    get origin() {\r\n      var host;\r\n      if (this._isInvalid || !this._scheme) {\r\n        return '';\r\n      }\r\n      // javascript: Gecko returns String(\"\"), WebKit/Blink String(\"null\")\r\n      // Gecko throws error for \"data://\"\r\n      // data: Gecko returns \"\", Blink returns \"data://\", WebKit returns \"null\"\r\n      // Gecko returns String(\"\") for file: mailto:\r\n      // WebKit/Blink returns String(\"SCHEME://\") for file: mailto:\r\n      switch (this._scheme) {\r\n        case 'data':\r\n        case 'file':\r\n        case 'javascript':\r\n        case 'mailto':\r\n          return 'null';\r\n      }\r\n      host = this.host;\r\n      if (!host) {\r\n        return '';\r\n      }\r\n      return this._scheme + '://' + host;\r\n    }\r\n  };\r\n\r\n  // Copy over the static methods\r\n  var OriginalURL = scope.URL;\r\n  if (OriginalURL) {\r\n    jURL.createObjectURL = function(blob) {\r\n      // IE extension allows a second optional options argument.\r\n      // http://msdn.microsoft.com/en-us/library/ie/hh772302(v=vs.85).aspx\r\n      return OriginalURL.createObjectURL.apply(OriginalURL, arguments);\r\n    };\r\n    jURL.revokeObjectURL = function(url) {\r\n      OriginalURL.revokeObjectURL(url);\r\n    };\r\n  }\r\n\r\n  scope.URL = jURL;\r\n\r\n})(self);"],"preExistingComment":"//# sourceMappingURL=data:application/json;charset:utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm5vZGVfbW9kdWxlcy9icm93c2VyLXBhY2svX3ByZWx1ZGUuanMiLCJDOi9Vc2Vycy9IYXJzaC9EZXNrdG9wL1BXQS93aXR0ci9wdWJsaWMvanMvcG9seWZpbGxzL3VybC5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7O0FDR0EsQ0FBQyxVQUFTLEtBQUssRUFBRTtBQUNmLGNBQVksQ0FBQzs7O0FBR2IsTUFBSSxhQUFhLEdBQUcsS0FBSyxDQUFDO0FBQzFCLE1BQUksQ0FBQyxLQUFLLENBQUMsU0FBUyxFQUFFO0FBQ3BCLFFBQUk7QUFDRixVQUFJLENBQUMsR0FBRyxJQUFJLEdBQUcsQ0FBQyxHQUFHLEVBQUUsVUFBVSxDQUFDLENBQUM7QUFDakMsT0FBQyxDQUFDLFFBQVEsR0FBRyxPQUFPLENBQUM7QUFDckIsbUJBQWEsR0FBRyxDQUFDLENBQUMsSUFBSSxLQUFLLGdCQUFnQixDQUFDO0tBQzdDLENBQUMsT0FBTSxDQUFDLEVBQUUsRUFBRTtHQUNkOztBQUVELE1BQUksYUFBYSxFQUNmLE9BQU87O0FBRVQsTUFBSSxRQUFRLEdBQUcsTUFBTSxDQUFDLE1BQU0sQ0FBQyxJQUFJLENBQUMsQ0FBQztBQUNuQyxVQUFRLENBQUMsS0FBSyxDQUFDLEdBQUcsRUFBRSxDQUFDO0FBQ3JCLFVBQVEsQ0FBQyxNQUFNLENBQUMsR0FBRyxDQUFDLENBQUM7QUFDckIsVUFBUSxDQUFDLFFBQVEsQ0FBQyxHQUFHLEVBQUUsQ0FBQztBQUN4QixVQUFRLENBQUMsTUFBTSxDQUFDLEdBQUcsRUFBRSxDQUFDO0FBQ3RCLFVBQVEsQ0FBQyxPQUFPLENBQUMsR0FBRyxHQUFHLENBQUM7QUFDeEIsVUFBUSxDQUFDLElBQUksQ0FBQyxHQUFHLEVBQUUsQ0FBQztBQUNwQixVQUFRLENBQUMsS0FBSyxDQUFDLEdBQUcsR0FBRyxDQUFDOztBQUV0QixNQUFJLHNCQUFzQixHQUFHLE1BQU0sQ0FBQyxNQUFNLENBQUMsSUFBSSxDQUFDLENBQUM7QUFDakQsd0JBQXNC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QU8sRUFBRSxDQUFDO1NBQ1g7QUFDRCxlQUFPLElBQUksQ0FBQyxPQUFPLEdBQUcsS0FBSyxHQUFHLElBQUksQ0FBQztPQUNwQzs7OztJQUNGLENBQUM7OztBQUdGLE1BQUksV0FBVyxHQUFHLEtBQUssQ0FBQyxHQUFHLENBQUM7QUFDNUIsTUFBSSxXQUFXLEVBQUU7QUFDZixRQUFJLENBQUMsZUFBZSxHQUFHLFVBQVMsSUFBSSxFQUFFOzs7QUFHcEMsYUFBTyxXQUFXLENBQUMsZUFBZSxDQUFDLEtBQUssQ0FBQyxXQUFXLEVBQUUsU0FBUyxDQUFDLENBQUM7S0FDbEUsQ0FBQztBQUNGLFFBQUksQ0FBQyxlQUFlLEdBQUcsVUFBUyxHQUFHLEVBQUU7QUFDbkMsaUJBQVcsQ0FBQyxlQUFlLENBQUMsR0FBRyxDQUFDLENBQUM7S0FDbEMsQ0FBQztHQUNIOztBQUVELE9BQUssQ0FBQyxHQUFHLEdBQUcsSUFBSSxDQUFDO0NBRWxCLENBQUEsQ0FBRSxJQUFJLENBQUMsQ0FBQyIsImZpbGUiOiJnZW5lcmF0ZWQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlc0NvbnRlbnQiOlsiKGZ1bmN0aW9uIGUodCxuLHIpe2Z1bmN0aW9uIHMobyx1KXtpZighbltvXSl7aWYoIXRbb10pe3ZhciBhPXR5cGVvZiByZXF1aXJlPT1cImZ1bmN0aW9uXCImJnJlcXVpcmU7aWYoIXUmJmEpcmV0dXJuIGEobywhMCk7aWYoaSlyZXR1cm4gaShvLCEwKTt2YXIgZj1uZXcgRXJyb3IoXCJDYW5ub3QgZmluZCBtb2R1bGUgJ1wiK28rXCInXCIpO3Rocm93IGYuY29kZT1cIk1PRFVMRV9OT1RfRk9VTkRcIixmfXZhciBsPW5bb109e2V4cG9ydHM6e319O3Rbb11bMF0uY2FsbChsLmV4cG9ydHMsZnVuY3Rpb24oZSl7dmFyIG49dFtvXVsxXVtlXTtyZXR1cm4gcyhuP246ZSl9LGwsbC5leHBvcnRzLGUsdCxuLHIpfXJldHVybiBuW29dLmV4cG9ydHN9dmFyIGk9dHlwZW9mIHJlcXVpcmU9PVwiZnVuY3Rpb25cIiYmcmVxdWlyZTtmb3IodmFyIG89MDtvPHIubGVuZ3RoO28rKylzKHJbb10pO3JldHVybiBzfSkiLCIvKiBBbnkgY29weXJpZ2h0IGlzIGRlZGljYXRlZCB0byB0aGUgUHVibGljIERvbWFpbi5cclxuICogaHR0cDovL2NyZWF0aXZlY29tbW9ucy5vcmcvcHVibGljZG9tYWluL3plcm8vMS4wLyAqL1xyXG5cclxuKGZ1bmN0aW9uKHNjb3BlKSB7XHJcbiAgJ3VzZSBzdHJpY3QnO1xyXG5cclxuICAvLyBmZWF0dXJlIGRldGVjdCBmb3IgVVJMIGNvbnN0cnVjdG9yXHJcbiAgdmFyIGhhc1dvcmtpbmdVcmwgPSBmYWxzZTtcclxuICBpZiAoIXNjb3BlLmZvcmNlSlVSTCkge1xyXG4gICAgdHJ5IHtcclxuICAgICAgdmFyIHUgPSBuZXcgVVJMKCdiJywgJ2h0dHA6Ly9hJyk7XHJcbiAgICAgIHUucGF0aG5hbWUgPSAnYyUyMGQnO1xyXG4gICAgICBoYXNXb3JraW5nVXJsID0gdS5ocmVmID09PSAnaHR0cDovL2EvYyUyMGQnO1xyXG4gICAgfSBjYXRjaChlKSB7fVxyXG4gIH1cclxuXHJcbiAgaWYgKGhhc1dvcmtpbmdVcmwpXHJcbiAgICByZXR1cm47XHJcblxyXG4gIHZhciByZWxhdGl2ZSA9IE9iamVjdC5jcmVhdGUobnVsbCk7XHJcbiAgcmVsYXRpdmVbJ2Z0cCddID0gMjE7XHJcbiAgcmVsYXRpdmVbJ2ZpbGUnXSA9IDA7XHJcbiAgcmVsYXRpdmVbJ2dvcGhlciddID0gNzA7XHJcbiAgcmVsYXRpdmVbJ2h0dHAnXSA9IDgwO1xyXG4gIHJlbGF0aXZlWydodHRwcyddID0gNDQzO1xyXG4gIHJlbGF0aXZlWyd3cyddID0gODA7XHJcbiAgcmVsYXRpdmVbJ3dzcyddID0gNDQzO1xyXG5cclxuICB2YXIgcmVsYXRpdmVQYXRoRG90TWFwcGluZyA9IE9iamVjdC5jcmVhdGUobnVsbCk7XHJcbiAgcmVsYXRpdmVQYXRoRG90TWFwcGluZ1snJTJlJ10gPSAnLic7XHJcbiAgcmVsYXRpdmVQYXRoRG90TWFwcGluZ1snLiUyZSddID0gJy4uJztcclxuICByZWxhdGl2ZVBhdGhEb3RNYXBwaW5nWyclMmUuJ10gPSAnLi4nO1xyXG4gIHJlbGF0aXZlUGF0aERvdE1hcHBpbmdbJyUyZSUyZSddID0gJy4uJztcclxuXHJcbiAgZnVuY3Rpb24gaXNSZWxhdGl2ZVNjaGVtZShzY2hlbWUpIHtcclxuICAgIHJldHVybiByZWxhdGl2ZVtzY2hlbWVdICE9PSB1bmRlZmluZWQ7XHJcbiAgfVxyXG5cclxuICBmdW5jdGlvbiBpbnZhbGlkKCkge1xyXG4gICAgY2xlYXIuY2FsbCh0aGlzKTtcclxuICAgIHRoaXMuX2lzSW52YWxpZCA9IHRydWU7XHJcbiAgfVxyXG5cclxuICBmdW5jdGlvbiBJRE5BVG9BU0NJSShoKSB7XHJcbiAgICBpZiAoJycgPT0gaCkge1xyXG4gICAgICBpbnZhbGlkLmNhbGwodGhpcylcclxuICAgIH1cclxuICAgIC8vIFhYWFxyXG4gICAgcmV0dXJuIGgudG9Mb3dlckNhc2UoKVxyXG4gIH1cclxuXHJcbiAgZnVuY3Rpb24gcGVyY2VudEVzY2FwZShjKSB7XHJcbiAgICB2YXIgdW5pY29kZSA9IGMuY2hhckNvZGVBdCgwKTtcclxuICAgIGlmICh1bmljb2RlID4gMHgyMCAmJlxyXG4gICAgICAgdW5pY29kZSA8IDB4N0YgJiZcclxuICAgICAgIC8vIFwiICMgPCA+ID8gYFxyXG4gICAgICAgWzB4MjIsIDB4MjMsIDB4M0MsIDB4M0UsIDB4M0YsIDB4NjBdLmluZGV4T2YodW5pY29kZSkgPT0gLTFcclxuICAgICAgKSB7XHJcbiAgICAgIHJldHVybiBjO1xyXG4gICAgfVxyXG4gICAgcmV0dXJuIGVuY29kZVVSSUNvbXBvbmVudChjKTtcclxuICB9XHJcblxyXG4gIGZ1bmN0aW9uIHBlcmNlbnRFc2NhcGVRdWVyeShjKSB7XHJcbiAgICAvLyBYWFggVGhpcyBhY3R1YWxseSBuZWVkcyB0byBlbmNvZGUgYyB1c2luZyBlbmNvZGluZyBhbmQgdGhlblxyXG4gICAgLy8gY29udmVydCB0aGUgYnl0ZXMgb25lLWJ5LW9uZS5cclxuXHJcbiAgICB2YXIgdW5pY29kZSA9IGMuY2hhckNvZGVBdCgwKTtcclxuICAgIGlmICh1bmljb2RlID4gMHgyMCAmJlxyXG4gICAgICAgdW5pY29kZSA8IDB4N0YgJiZcclxuICAgICAgIC8vIFwiICMgPCA+IGAgKGRvIG5vdCBlc2NhcGUgJz8nKVxyXG4gICAgICAgWzB4MjIsIDB4MjMsIDB4M0MsIDB4M0UsIDB4NjBdLmluZGV4T2YodW5pY29kZSkgPT0gLTFcclxuICAgICAgKSB7XHJcbiAgICAgIHJldHVybiBjO1xyXG4gICAgfVxyXG4gICAgcmV0dXJuIGVuY29kZVVSSUNvbXBvbmVudChjKTtcclxuICB9XHJcblxyXG4gIHZhciBFT0YgPSB1bmRlZmluZWQsXHJcbiAgICAgIEFMUEhBID0gL1thLXpBLVpdLyxcclxuICAgICAgQUxQSEFOVU1FUklDID0gL1thLXpBLVowLTlcXCtcXC1cXC5dLztcclxuXHJcbiAgZnVuY3Rpb24gcGFyc2UoaW5wdXQsIHN0YXRlT3ZlcnJpZGUsIGJhc2UpIHtcclxuICAgIGZ1bmN0aW9uIGVycihtZXNzYWdlKSB7XHJcbiAgICAgIGVycm9ycy5wdXNoKG1lc3NhZ2UpXHJcbiAgICB9XHJcblxyXG4gICAgdmFyIHN0YXRlID0gc3RhdGVPdmVycmlkZSB8fCAnc2NoZW1lIHN0YXJ0JyxcclxuICAgICAgICBjdXJzb3IgPSAwLFxyXG4gICAgICAgIGJ1ZmZlciA9ICcnLFxyXG4gICAgICAgIHNlZW5BdCA9IGZhbHNlLFxyXG4gICAgICAgIHNlZW5CcmFja2V0ID0gZmFsc2UsXHJcbiAgICAgICAgZXJyb3JzID0gW107XHJcblxyXG4gICAgbG9vcDogd2hpbGUgKChpbnB1dFtjdXJzb3IgLSAxXSAhPSBFT0YgfHwgY3Vyc29yID09IDApICYmICF0aGlzLl9pc0ludmFsaWQpIHtcclxuICAgICAgdmFyIGMgPSBpbnB1dFtjdXJzb3JdO1xyXG4gICAgICBzd2l0Y2ggKHN0YXRlKSB7XHJcbiAgICAgICAgY2FzZSAnc2NoZW1lIHN0YXJ0JzpcclxuICAgICAgICAgIGlmIChjICYmIEFMUEhBLnRlc3QoYykpIHtcclxuICAgICAgICAgICAgYnVmZmVyICs9IGMudG9Mb3dlckNhc2UoKTsgLy8gQVNDSUktc2FmZVxyXG4gICAgICAgICAgICBzdGF0ZSA9ICdzY2hlbWUnO1xyXG4gICAgICAgICAgfSBlbHNlIGlmICghc3RhdGVPdmVycmlkZSkge1xyXG4gICAgICAgICAgICBidWZmZXIgPSAnJztcclxuICAgICAgICAgICAgc3RhdGUgPSAnbm8gc2NoZW1lJztcclxuICAgICAgICAgICAgY29udGludWU7XHJcbiAgICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICBlcnIoJ0ludmFsaWQgc2NoZW1lLicpO1xyXG4gICAgICAgICAgICBicmVhayBsb29wO1xyXG4gICAgICAgICAgfVxyXG4gICAgICAgICAgYnJlYWs7XHJcblxyXG4gICAgICAgIGNhc2UgJ3NjaGVtZSc6XHJcbiAgICAgICAgICBpZiAoYyAmJiBBTFBIQU5VTUVSSUMudGVzdChjKSkge1xyXG4gICAgICAgICAgICBidWZmZXIgKz0gYy50b0xvd2VyQ2FzZSgpOyAvLyBBU0NJSS1zYWZlXHJcbiAgICAgICAgICB9IGVsc2UgaWYgKCc6JyA9PSBjKSB7XHJcbiAgICAgICAgICAgIHRoaXMuX3NjaGVtZSA9IGJ1ZmZlcjtcclxuICAgICAgICAgICAgYnVmZmVyID0gJyc7XHJcbiAgICAgICAgICAgIGlmIChzdGF0ZU92ZXJyaWRlKSB7XHJcbiAgICAgICAgICAgICAgYnJlYWsgbG9vcDtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBpZiAoaXNSZWxhdGl2ZVNjaGVtZSh0aGlzLl9zY2hlbWUpKSB7XHJcbiAgICAgICAgICAgICAgdGhpcy5faXNSZWxhdGl2ZSA9IHRydWU7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgaWYgKCdmaWxlJyA9PSB0aGlzLl9zY2hlbWUpIHtcclxuICAgICAgICAgICAgICBzdGF0ZSA9ICdyZWxhdGl2ZSc7XHJcbiAgICAgICAgICAgIH0gZWxzZSBpZiAodGhpcy5faXNSZWxhdGl2ZSAmJiBiYXNlICYmIGJhc2UuX3NjaGVtZSA9PSB0aGlzLl9zY2hlbWUpIHtcclxuICAgICAgICAgICAgICBzdGF0ZSA9ICdyZWxhdGl2ZSBvciBhdXRob3JpdHknO1xyXG4gICAgICAgICAgICB9IGVsc2UgaWYgKHRoaXMuX2lzUmVsYXRpdmUpIHtcclxuICAgICAgICAgICAgICBzdGF0ZSA9ICdhdXRob3JpdHkgZmlyc3Qgc2xhc2gnO1xyXG4gICAgICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICAgIHN0YXRlID0gJ3NjaGVtZSBkYXRhJztcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgfSBlbHNlIGlmICghc3RhdGVPdmVycmlkZSkge1xyXG4gICAgICAgICAgICBidWZmZXIgPSAnJztcclxuICAgICAgICAgICAgY3Vyc29yID0gMDtcclxuICAgICAgICAgICAgc3RhdGUgPSAnbm8gc2NoZW1lJztcclxuICAgICAgICAgICAgY29udGludWU7XHJcbiAgICAgICAgICB9IGVsc2UgaWYgKEVPRiA9PSBjKSB7XHJcbiAgICAgICAgICAgIGJyZWFrIGxvb3A7XHJcbiAgICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICBlcnIoJ0NvZGUgcG9pbnQgbm90IGFsbG93ZWQgaW4gc2NoZW1lOiAnICsgYylcclxuICAgICAgICAgICAgYnJlYWsgbG9vcDtcclxuICAgICAgICAgIH1cclxuICAgICAgICAgIGJyZWFrO1xyXG5cclxuICAgICAgICBjYXNlICdzY2hlbWUgZGF0YSc6XHJcbiAgICAgICAgICBpZiAoJz8nID09IGMpIHtcclxuICAgICAgICAgICAgcXVlcnkgPSAnPyc7XHJcbiAgICAgICAgICAgIHN0YXRlID0gJ3F1ZXJ5JztcclxuICAgICAgICAgIH0gZWxzZSBpZiAoJyMnID09IGMpIHtcclxuICAgICAgICAgICAgdGhpcy5fZnJhZ21lbnQgPSAnIyc7XHJcbiAgICAgICAgICAgIHN0YXRlID0gJ2ZyYWdtZW50JztcclxuICAgICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgIC8vIFhYWCBlcnJvciBoYW5kbGluZ1xyXG4gICAgICAgICAgICBpZiAoRU9GICE9IGMgJiYgJ1xcdCcgIT0gYyAmJiAnXFxuJyAhPSBjICYmICdcXHInICE9IGMpIHtcclxuICAgICAgICAgICAgICB0aGlzLl9zY2hlbWVEYXRhICs9IHBlcmNlbnRFc2NhcGUoYyk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgIH1cclxuICAgICAgICAgIGJyZWFrO1xyXG5cclxuICAgICAgICBjYXNlICdubyBzY2hlbWUnOlxyXG4gICAgICAgICAgaWYgKCFiYXNlIHx8ICEoaXNSZWxhdGl2ZVNjaGVtZShiYXNlLl9zY2hlbWUpKSkge1xyXG4gICAgICAgICAgICBlcnIoJ01pc3Npbmcgc2NoZW1lLicpO1xyXG4gICAgICAgICAgICBpbnZhbGlkLmNhbGwodGhpcyk7XHJcbiAgICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICBzdGF0ZSA9ICdyZWxhdGl2ZSc7XHJcbiAgICAgICAgICAgIGNvbnRpbnVlO1xyXG4gICAgICAgICAgfVxyXG4gICAgICAgICAgYnJlYWs7XHJcblxyXG4gICAgICAgIGNhc2UgJ3JlbGF0aXZlIG9yIGF1dGhvcml0eSc6XHJcbiAgICAgICAgICBpZiAoJy8nID09IGMgJiYgJy8nID09IGlucHV0W2N1cnNvcisxXSkge1xyXG4gICAgICAgICAgICBzdGF0ZSA9ICdhdXRob3JpdHkgaWdub3JlIHNsYXNoZXMnO1xyXG4gICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgZXJyKCdFeHBlY3RlZCAvLCBnb3Q6ICcgKyBjKTtcclxuICAgICAgICAgICAgc3RhdGUgPSAncmVsYXRpdmUnO1xyXG4gICAgICAgICAgICBjb250aW51ZVxyXG4gICAgICAgICAgfVxyXG4gICAgICAgICAgYnJlYWs7XHJcblxyXG4gICAgICAgIGNhc2UgJ3JlbGF0aXZlJzpcclxuICAgICAgICAgIHRoaXMuX2lzUmVsYXRpdmUgPSB0cnVlO1xyXG4gICAgICAgICAgaWYgKCdmaWxlJyAhPSB0aGlzLl9zY2hlbWUpXHJcbiAgICAgICAgICAgIHRoaXMuX3NjaGVtZSA9IGJhc2UuX3NjaGVtZTtcclxuICAgICAgICAgIGlmIChFT0YgPT0gYykge1xyXG4gICAgICAgICAgICB0aGlzLl9ob3N0ID0gYmFzZS5faG9zdDtcclxuICAgICAgICAgICAgdGhpcy5fcG9ydCA9IGJhc2UuX3BvcnQ7XHJcbiAgICAgICAgICAgIHRoaXMuX3BhdGggPSBiYXNlLl9wYXRoLnNsaWNlKCk7XHJcbiAgICAgICAgICAgIHRoaXMuX3F1ZXJ5ID0gYmFzZS5fcXVlcnk7XHJcbiAgICAgICAgICAgIHRoaXMuX3VzZXJuYW1lID0gYmFzZS5fdXNlcm5hbWU7XHJcbiAgICAgICAgICAgIHRoaXMuX3Bhc3N3b3JkID0gYmFzZS5fcGFzc3dvcmQ7XHJcbiAgICAgICAgICAgIGJyZWFrIGxvb3A7XHJcbiAgICAgICAgICB9IGVsc2UgaWYgKCcvJyA9PSBjIHx8ICdcXFxcJyA9PSBjKSB7XHJcbiAgICAgICAgICAgIGlmICgnXFxcXCcgPT0gYylcclxuICAgICAgICAgICAgICBlcnIoJ1xcXFwgaXMgYW4gaW52YWxpZCBjb2RlIHBvaW50LicpO1xyXG4gICAgICAgICAgICBzdGF0ZSA9ICdyZWxhdGl2ZSBzbGFzaCc7XHJcbiAgICAgICAgICB9IGVsc2UgaWYgKCc/JyA9PSBjKSB7XHJcbiAgICAgICAgICAgIHRoaXMuX2hvc3QgPSBiYXNlLl9ob3N0O1xyXG4gICAgICAgICAgICB0aGlzLl9wb3J0ID0gYmFzZS5fcG9ydDtcclxuICAgICAgICAgICAgdGhpcy5fcGF0aCA9IGJhc2UuX3BhdGguc2xpY2UoKTtcclxuICAgICAgICAgICAgdGhpcy5fcXVlcnkgPSAnPyc7XHJcbiAgICAgICAgICAgIHRoaXMuX3VzZXJuYW1lID0gYmFzZS5fdXNlcm5hbWU7XHJcbiAgICAgICAgICAgIHRoaXMuX3Bhc3N3b3JkID0gYmFzZS5fcGFzc3dvcmQ7XHJcbiAgICAgICAgICAgIHN0YXRlID0gJ3F1ZXJ5JztcclxuICAgICAgICAgIH0gZWxzZSBpZiAoJyMnID09IGMpIHtcclxuICAgICAgICAgICAgdGhpcy5faG9zdCA9IGJhc2UuX2hvc3Q7XHJcbiAgICAgICAgICAgIHRoaXMuX3BvcnQgPSBiYXNlLl9wb3J0O1xyXG4gICAgICAgICAgICB0aGlzLl9wYXRoID0gYmFzZS5fcGF0aC5zbGljZSgpO1xyXG4gICAgICAgICAgICB0aGlzLl9xdWVyeSA9IGJhc2UuX3F1ZXJ5O1xyXG4gICAgICAgICAgICB0aGlzLl9mcmFnbWVudCA9ICcjJztcclxuICAgICAgICAgICAgdGhpcy5fdXNlcm5hbWUgPSBiYXNlLl91c2VybmFtZTtcclxuICAgICAgICAgICAgdGhpcy5fcGFzc3dvcmQgPSBiYXNlLl9wYXNzd29yZDtcclxuICAgICAgICAgICAgc3RhdGUgPSAnZnJhZ21lbnQnO1xyXG4gICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgdmFyIG5leHRDID0gaW5wdXRbY3Vyc29yKzFdXHJcbiAgICAgICAgICAgIHZhciBuZXh0TmV4dEMgPSBpbnB1dFtjdXJzb3IrMl1cclxuICAgICAgICAgICAgaWYgKFxyXG4gICAgICAgICAgICAgICdmaWxlJyAhPSB0aGlzLl9zY2hlbWUgfHwgIUFMUEhBLnRlc3QoYykgfHxcclxuICAgICAgICAgICAgICAobmV4dEMgIT0gJzonICYmIG5leHRDICE9ICd8JykgfHxcclxuICAgICAgICAgICAgICAoRU9GICE9IG5leHROZXh0QyAmJiAnLycgIT0gbmV4dE5leHRDICYmICdcXFxcJyAhPSBuZXh0TmV4dEMgJiYgJz8nICE9IG5leHROZXh0QyAmJiAnIycgIT0gbmV4dE5leHRDKSkge1xyXG4gICAgICAgICAgICAgIHRoaXMuX2hvc3QgPSBiYXNlLl9ob3N0O1xyXG4gICAgICAgICAgICAgIHRoaXMuX3BvcnQgPSBiYXNlLl9wb3J0O1xyXG4gICAgICAgICAgICAgIHRoaXMuX3VzZXJuYW1lID0gYmFzZS5fdXNlcm5hbWU7XHJcbiAgICAgICAgICAgICAgdGhpcy5fcGFzc3dvcmQgPSBiYXNlLl9wYXNzd29yZDtcclxuICAgICAgICAgICAgICB0aGlzLl9wYXRoID0gYmFzZS5fcGF0aC5zbGljZSgpO1xyXG4gICAgICAgICAgICAgIHRoaXMuX3BhdGgucG9wKCk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgc3RhdGUgPSAncmVsYXRpdmUgcGF0aCc7XHJcbiAgICAgICAgICAgIGNvbnRpbnVlO1xyXG4gICAgICAgICAgfVxyXG4gICAgICAgICAgYnJlYWs7XHJcblxyXG4gICAgICAgIGNhc2UgJ3JlbGF0aXZlIHNsYXNoJzpcclxuICAgICAgICAgIGlmICgnLycgPT0gYyB8fCAnXFxcXCcgPT0gYykge1xyXG4gICAgICAgICAgICBpZiAoJ1xcXFwnID09IGMpIHtcclxuICAgICAgICAgICAgICBlcnIoJ1xcXFwgaXMgYW4gaW52YWxpZCBjb2RlIHBvaW50LicpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGlmICgnZmlsZScgPT0gdGhpcy5fc2NoZW1lKSB7XHJcbiAgICAgICAgICAgICAgc3RhdGUgPSAnZmlsZSBob3N0JztcclxuICAgICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgICBzdGF0ZSA9ICdhdXRob3JpdHkgaWdub3JlIHNsYXNoZXMnO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICBpZiAoJ2ZpbGUnICE9IHRoaXMuX3NjaGVtZSkge1xyXG4gICAgICAgICAgICAgIHRoaXMuX2hvc3QgPSBiYXNlLl9ob3N0O1xyXG4gICAgICAgICAgICAgIHRoaXMuX3BvcnQgPSBiYXNlLl9wb3J0O1xyXG4gICAgICAgICAgICAgIHRoaXMuX3VzZXJuYW1lID0gYmFzZS5fdXNlcm5hbWU7XHJcbiAgICAgICAgICAgICAgdGhpcy5fcGFzc3dvcmQgPSBiYXNlLl9wYXNzd29yZDtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBzdGF0ZSA9ICdyZWxhdGl2ZSBwYXRoJztcclxuICAgICAgICAgICAgY29udGludWU7XHJcbiAgICAgICAgICB9XHJcbiAgICAgICAgICBicmVhaztcclxuXHJcbiAgICAgICAgY2FzZSAnYXV0aG9yaXR5IGZpcnN0IHNsYXNoJzpcclxuICAgICAgICAgIGlmICgnLycgPT0gYykge1xyXG4gICAgICAgICAgICBzdGF0ZSA9ICdhdXRob3JpdHkgc2Vjb25kIHNsYXNoJztcclxuICAgICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgIGVycihcIkV4cGVjdGVkICcvJywgZ290OiBcIiArIGMpO1xyXG4gICAgICAgICAgICBzdGF0ZSA9ICdhdXRob3JpdHkgaWdub3JlIHNsYXNoZXMnO1xyXG4gICAgICAgICAgICBjb250aW51ZTtcclxuICAgICAgICAgIH1cclxuICAgICAgICAgIGJyZWFrO1xyXG5cclxuICAgICAgICBjYXNlICdhdXRob3JpdHkgc2Vjb25kIHNsYXNoJzpcclxuICAgICAgICAgIHN0YXRlID0gJ2F1dGhvcml0eSBpZ25vcmUgc2xhc2hlcyc7XHJcbiAgICAgICAgICBpZiAoJy8nICE9IGMpIHtcclxuICAgICAgICAgICAgZXJyKFwiRXhwZWN0ZWQgJy8nLCBnb3Q6IFwiICsgYyk7XHJcbiAgICAgICAgICAgIGNvbnRpbnVlO1xyXG4gICAgICAgICAgfVxyXG4gICAgICAgICAgYnJlYWs7XHJcblxyXG4gICAgICAgIGNhc2UgJ2F1dGhvcml0eSBpZ25vcmUgc2xhc2hlcyc6XHJcbiAgICAgICAgICBpZiAoJy8nICE9IGMgJiYgJ1xcXFwnICE9IGMpIHtcclxuICAgICAgICAgICAgc3RhdGUgPSAnYXV0aG9yaXR5JztcclxuICAgICAgICAgICAgY29udGludWU7XHJcbiAgICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICBlcnIoJ0V4cGVjdGVkIGF1dGhvcml0eSwgZ290OiAnICsgYyk7XHJcbiAgICAgICAgICB9XHJcbiAgICAgICAgICBicmVhaztcclxuXHJcbiAgICAgICAgY2FzZSAnYXV0aG9yaXR5JzpcclxuICAgICAgICAgIGlmICgnQCcgPT0gYykge1xyXG4gICAgICAgICAgICBpZiAoc2VlbkF0KSB7XHJcbiAgICAgICAgICAgICAgZXJyKCdAIGFscmVhZHkgc2Vlbi4nKTtcclxuICAgICAgICAgICAgICBidWZmZXIgKz0gJyU0MCc7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgc2VlbkF0ID0gdHJ1ZTtcclxuICAgICAgICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCBidWZmZXIubGVuZ3RoOyBpKyspIHtcclxuICAgICAgICAgICAgICB2YXIgY3AgPSBidWZmZXJbaV07XHJcbiAgICAgICAgICAgICAgaWYgKCdcXHQnID09IGNwIHx8ICdcXG4nID09IGNwIHx8ICdcXHInID09IGNwKSB7XHJcbiAgICAgICAgICAgICAgICBlcnIoJ0ludmFsaWQgd2hpdGVzcGFjZSBpbiBhdXRob3JpdHkuJyk7XHJcbiAgICAgICAgICAgICAgICBjb250aW51ZTtcclxuICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgLy8gWFhYIGNoZWNrIFVSTCBjb2RlIHBvaW50c1xyXG4gICAgICAgICAgICAgIGlmICgnOicgPT0gY3AgJiYgbnVsbCA9PT0gdGhpcy5fcGFzc3dvcmQpIHtcclxuICAgICAgICAgICAgICAgIHRoaXMuX3Bhc3N3b3JkID0gJyc7XHJcbiAgICAgICAgICAgICAgICBjb250aW51ZTtcclxuICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgdmFyIHRlbXBDID0gcGVyY2VudEVzY2FwZShjcCk7XHJcbiAgICAgICAgICAgICAgKG51bGwgIT09IHRoaXMuX3Bhc3N3b3JkKSA/IHRoaXMuX3Bhc3N3b3JkICs9IHRlbXBDIDogdGhpcy5fdXNlcm5hbWUgKz0gdGVtcEM7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgYnVmZmVyID0gJyc7XHJcbiAgICAgICAgICB9IGVsc2UgaWYgKEVPRiA9PSBjIHx8ICcvJyA9PSBjIHx8ICdcXFxcJyA9PSBjIHx8ICc/JyA9PSBjIHx8ICcjJyA9PSBjKSB7XHJcbiAgICAgICAgICAgIGN1cnNvciAtPSBidWZmZXIubGVuZ3RoO1xyXG4gICAgICAgICAgICBidWZmZXIgPSAnJztcclxuICAgICAgICAgICAgc3RhdGUgPSAnaG9zdCc7XHJcbiAgICAgICAgICAgIGNvbnRpbnVlO1xyXG4gICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgYnVmZmVyICs9IGM7XHJcbiAgICAgICAgICB9XHJcbiAgICAgICAgICBicmVhaztcclxuXHJcbiAgICAgICAgY2FzZSAnZmlsZSBob3N0JzpcclxuICAgICAgICAgIGlmIChFT0YgPT0gYyB8fCAnLycgPT0gYyB8fCAnXFxcXCcgPT0gYyB8fCAnPycgPT0gYyB8fCAnIycgPT0gYykge1xyXG4gICAgICAgICAgICBpZiAoYnVmZmVyLmxlbmd0aCA9PSAyICYmIEFMUEhBLnRlc3QoYnVmZmVyWzBdKSAmJiAoYnVmZmVyWzFdID09ICc6JyB8fCBidWZmZXJbMV0gPT0gJ3wnKSkge1xyXG4gICAgICAgICAgICAgIHN0YXRlID0gJ3JlbGF0aXZlIHBhdGgnO1xyXG4gICAgICAgICAgICB9IGVsc2UgaWYgKGJ1ZmZlci5sZW5ndGggPT0gMCkge1xyXG4gICAgICAgICAgICAgIHN0YXRlID0gJ3JlbGF0aXZlIHBhdGggc3RhcnQnO1xyXG4gICAgICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICAgIHRoaXMuX2hvc3QgPSBJRE5BVG9BU0NJSS5jYWxsKHRoaXMsIGJ1ZmZlcik7XHJcbiAgICAgICAgICAgICAgYnVmZmVyID0gJyc7XHJcbiAgICAgICAgICAgICAgc3RhdGUgPSAncmVsYXRpdmUgcGF0aCBzdGFydCc7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgY29udGludWU7XHJcbiAgICAgICAgICB9IGVsc2UgaWYgKCdcXHQnID09IGMgfHwgJ1xcbicgPT0gYyB8fCAnXFxyJyA9PSBjKSB7XHJcbiAgICAgICAgICAgIGVycignSW52YWxpZCB3aGl0ZXNwYWNlIGluIGZpbGUgaG9zdC4nKTtcclxuICAgICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgIGJ1ZmZlciArPSBjO1xyXG4gICAgICAgICAgfVxyXG4gICAgICAgICAgYnJlYWs7XHJcblxyXG4gICAgICAgIGNhc2UgJ2hvc3QnOlxyXG4gICAgICAgIGNhc2UgJ2hvc3RuYW1lJzpcclxuICAgICAgICAgIGlmICgnOicgPT0gYyAmJiAhc2VlbkJyYWNrZXQpIHtcclxuICAgICAgICAgICAgLy8gWFhYIGhvc3QgcGFyc2luZ1xyXG4gICAgICAgICAgICB0aGlzLl9ob3N0ID0gSUROQVRvQVNDSUkuY2FsbCh0aGlzLCBidWZmZXIpO1xyXG4gICAgICAgICAgICBidWZmZXIgPSAnJztcclxuICAgICAgICAgICAgc3RhdGUgPSAncG9ydCc7XHJcbiAgICAgICAgICAgIGlmICgnaG9zdG5hbWUnID09IHN0YXRlT3ZlcnJpZGUpIHtcclxuICAgICAgICAgICAgICBicmVhayBsb29wO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICB9IGVsc2UgaWYgKEVPRiA9PSBjIHx8ICcvJyA9PSBjIHx8ICdcXFxcJyA9PSBjIHx8ICc/JyA9PSBjIHx8ICcjJyA9PSBjKSB7XHJcbiAgICAgICAgICAgIHRoaXMuX2hvc3QgPSBJRE5BVG9BU0NJSS5jYWxsKHRoaXMsIGJ1ZmZlcik7XHJcbiAgICAgICAgICAgIGJ1ZmZlciA9ICcnO1xyXG4gICAgICAgICAgICBzdGF0ZSA9ICdyZWxhdGl2ZSBwYXRoIHN0YXJ0JztcclxuICAgICAgICAgICAgaWYgKHN0YXRlT3ZlcnJpZGUpIHtcclxuICAgICAgICAgICAgICBicmVhayBsb29wO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGNvbnRpbnVlO1xyXG4gICAgICAgICAgfSBlbHNlIGlmICgnXFx0JyAhPSBjICYmICdcXG4nICE9IGMgJiYgJ1xccicgIT0gYykge1xyXG4gICAgICAgICAgICBpZiAoJ1snID09IGMpIHtcclxuICAgICAgICAgICAgICBzZWVuQnJhY2tldCA9IHRydWU7XHJcbiAgICAgICAgICAgIH0gZWxzZSBpZiAoJ10nID09IGMpIHtcclxuICAgICAgICAgICAgICBzZWVuQnJhY2tldCA9IGZhbHNlO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGJ1ZmZlciArPSBjO1xyXG4gICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgZXJyKCdJbnZhbGlkIGNvZGUgcG9pbnQgaW4gaG9zdC9ob3N0bmFtZTogJyArIGMpO1xyXG4gICAgICAgICAgfVxyXG4gICAgICAgICAgYnJlYWs7XHJcblxyXG4gICAgICAgIGNhc2UgJ3BvcnQnOlxyXG4gICAgICAgICAgaWYgKC9bMC05XS8udGVzdChjKSkge1xyXG4gICAgICAgICAgICBidWZmZXIgKz0gYztcclxuICAgICAgICAgIH0gZWxzZSBpZiAoRU9GID09IGMgfHwgJy8nID09IGMgfHwgJ1xcXFwnID09IGMgfHwgJz8nID09IGMgfHwgJyMnID09IGMgfHwgc3RhdGVPdmVycmlkZSkge1xyXG4gICAgICAgICAgICBpZiAoJycgIT0gYnVmZmVyKSB7XHJcbiAgICAgICAgICAgICAgdmFyIHRlbXAgPSBwYXJzZUludChidWZmZXIsIDEwKTtcclxuICAgICAgICAgICAgICBpZiAodGVtcCAhPSByZWxhdGl2ZVt0aGlzLl9zY2hlbWVdKSB7XHJcbiAgICAgICAgICAgICAgICB0aGlzLl9wb3J0ID0gdGVtcCArICcnO1xyXG4gICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICBidWZmZXIgPSAnJztcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBpZiAoc3RhdGVPdmVycmlkZSkge1xyXG4gICAgICAgICAgICAgIGJyZWFrIGxvb3A7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgc3RhdGUgPSAncmVsYXRpdmUgcGF0aCBzdGFydCc7XHJcbiAgICAgICAgICAgIGNvbnRpbnVlO1xyXG4gICAgICAgICAgfSBlbHNlIGlmICgnXFx0JyA9PSBjIHx8ICdcXG4nID09IGMgfHwgJ1xccicgPT0gYykge1xyXG4gICAgICAgICAgICBlcnIoJ0ludmFsaWQgY29kZSBwb2ludCBpbiBwb3J0OiAnICsgYyk7XHJcbiAgICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICBpbnZhbGlkLmNhbGwodGhpcyk7XHJcbiAgICAgICAgICB9XHJcbiAgICAgICAgICBicmVhaztcclxuXHJcbiAgICAgICAgY2FzZSAncmVsYXRpdmUgcGF0aCBzdGFydCc6XHJcbiAgICAgICAgICBpZiAoJ1xcXFwnID09IGMpXHJcbiAgICAgICAgICAgIGVycihcIidcXFxcJyBub3QgYWxsb3dlZCBpbiBwYXRoLlwiKTtcclxuICAgICAgICAgIHN0YXRlID0gJ3JlbGF0aXZlIHBhdGgnO1xyXG4gICAgICAgICAgaWYgKCcvJyAhPSBjICYmICdcXFxcJyAhPSBjKSB7XHJcbiAgICAgICAgICAgIGNvbnRpbnVlO1xyXG4gICAgICAgICAgfVxyXG4gICAgICAgICAgYnJlYWs7XHJcblxyXG4gICAgICAgIGNhc2UgJ3JlbGF0aXZlIHBhdGgnOlxyXG4gICAgICAgICAgaWYgKEVPRiA9PSBjIHx8ICcvJyA9PSBjIHx8ICdcXFxcJyA9PSBjIHx8ICghc3RhdGVPdmVycmlkZSAmJiAoJz8nID09IGMgfHwgJyMnID09IGMpKSkge1xyXG4gICAgICAgICAgICBpZiAoJ1xcXFwnID09IGMpIHtcclxuICAgICAgICAgICAgICBlcnIoJ1xcXFwgbm90IGFsbG93ZWQgaW4gcmVsYXRpdmUgcGF0aC4nKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB2YXIgdG1wO1xyXG4gICAgICAgICAgICBpZiAodG1wID0gcmVsYXRpdmVQYXRoRG90TWFwcGluZ1tidWZmZXIudG9Mb3dlckNhc2UoKV0pIHtcclxuICAgICAgICAgICAgICBidWZmZXIgPSB0bXA7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgaWYgKCcuLicgPT0gYnVmZmVyKSB7XHJcbiAgICAgICAgICAgICAgdGhpcy5fcGF0aC5wb3AoKTtcclxuICAgICAgICAgICAgICBpZiAoJy8nICE9IGMgJiYgJ1xcXFwnICE9IGMpIHtcclxuICAgICAgICAgICAgICAgIHRoaXMuX3BhdGgucHVzaCgnJyk7XHJcbiAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9IGVsc2UgaWYgKCcuJyA9PSBidWZmZXIgJiYgJy8nICE9IGMgJiYgJ1xcXFwnICE9IGMpIHtcclxuICAgICAgICAgICAgICB0aGlzLl9wYXRoLnB1c2goJycpO1xyXG4gICAgICAgICAgICB9IGVsc2UgaWYgKCcuJyAhPSBidWZmZXIpIHtcclxuICAgICAgICAgICAgICBpZiAoJ2ZpbGUnID09IHRoaXMuX3NjaGVtZSAmJiB0aGlzLl9wYXRoLmxlbmd0aCA9PSAwICYmIGJ1ZmZlci5sZW5ndGggPT0gMiAmJiBBTFBIQS50ZXN0KGJ1ZmZlclswXSkgJiYgYnVmZmVyWzFdID09ICd8Jykge1xyXG4gICAgICAgICAgICAgICAgYnVmZmVyID0gYnVmZmVyWzBdICsgJzonO1xyXG4gICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICB0aGlzLl9wYXRoLnB1c2goYnVmZmVyKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBidWZmZXIgPSAnJztcclxuICAgICAgICAgICAgaWYgKCc/JyA9PSBjKSB7XHJcbiAgICAgICAgICAgICAgdGhpcy5fcXVlcnkgPSAnPyc7XHJcbiAgICAgICAgICAgICAgc3RhdGUgPSAncXVlcnknO1xyXG4gICAgICAgICAgICB9IGVsc2UgaWYgKCcjJyA9PSBjKSB7XHJcbiAgICAgICAgICAgICAgdGhpcy5fZnJhZ21lbnQgPSAnIyc7XHJcbiAgICAgICAgICAgICAgc3RhdGUgPSAnZnJhZ21lbnQnO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICB9IGVsc2UgaWYgKCdcXHQnICE9IGMgJiYgJ1xcbicgIT0gYyAmJiAnXFxyJyAhPSBjKSB7XHJcbiAgICAgICAgICAgIGJ1ZmZlciArPSBwZXJjZW50RXNjYXBlKGMpO1xyXG4gICAgICAgICAgfVxyXG4gICAgICAgICAgYnJlYWs7XHJcblxyXG4gICAgICAgIGNhc2UgJ3F1ZXJ5JzpcclxuICAgICAgICAgIGlmICghc3RhdGVPdmVycmlkZSAmJiAnIycgPT0gYykge1xyXG4gICAgICAgICAgICB0aGlzLl9mcmFnbWVudCA9ICcjJztcclxuICAgICAgICAgICAgc3RhdGUgPSAnZnJhZ21lbnQnO1xyXG4gICAgICAgICAgfSBlbHNlIGlmIChFT0YgIT0gYyAmJiAnXFx0JyAhPSBjICYmICdcXG4nICE9IGMgJiYgJ1xccicgIT0gYykge1xyXG4gICAgICAgICAgICB0aGlzLl9xdWVyeSArPSBwZXJjZW50RXNjYXBlUXVlcnkoYyk7XHJcbiAgICAgICAgICB9XHJcbiAgICAgICAgICBicmVhaztcclxuXHJcbiAgICAgICAgY2FzZSAnZnJhZ21lbnQnOlxyXG4gICAgICAgICAgaWYgKEVPRiAhPSBjICYmICdcXHQnICE9IGMgJiYgJ1xcbicgIT0gYyAmJiAnXFxyJyAhPSBjKSB7XHJcbiAgICAgICAgICAgIHRoaXMuX2ZyYWdtZW50ICs9IGM7XHJcbiAgICAgICAgICB9XHJcbiAgICAgICAgICBicmVhaztcclxuICAgICAgfVxyXG5cclxuICAgICAgY3Vyc29yKys7XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICBmdW5jdGlvbiBjbGVhcigpIHtcclxuICAgIHRoaXMuX3NjaGVtZSA9ICcnO1xyXG4gICAgdGhpcy5fc2NoZW1lRGF0YSA9ICcnO1xyXG4gICAgdGhpcy5fdXNlcm5hbWUgPSAnJztcclxuICAgIHRoaXMuX3Bhc3N3b3JkID0gbnVsbDtcclxuICAgIHRoaXMuX2hvc3QgPSAnJztcclxuICAgIHRoaXMuX3BvcnQgPSAnJztcclxuICAgIHRoaXMuX3BhdGggPSBbXTtcclxuICAgIHRoaXMuX3F1ZXJ5ID0gJyc7XHJcbiAgICB0aGlzLl9mcmFnbWVudCA9ICcnO1xyXG4gICAgdGhpcy5faXNJbnZhbGlkID0gZmFsc2U7XHJcbiAgICB0aGlzLl9pc1JlbGF0aXZlID0gZmFsc2U7XHJcbiAgfVxyXG5cclxuICAvLyBEb2VzIG5vdCBwcm9jZXNzIGRvbWFpbiBuYW1lcyBvciBJUCBhZGRyZXNzZXMuXHJcbiAgLy8gRG9lcyBub3QgaGFuZGxlIGVuY29kaW5nIGZvciB0aGUgcXVlcnkgcGFyYW1ldGVyLlxyXG4gIGZ1bmN0aW9uIGpVUkwodXJsLCBiYXNlIC8qICwgZW5jb2RpbmcgKi8pIHtcclxuICAgIGlmIChiYXNlICE9PSB1bmRlZmluZWQgJiYgIShiYXNlIGluc3RhbmNlb2YgalVSTCkpXHJcbiAgICAgIGJhc2UgPSBuZXcgalVSTChTdHJpbmcoYmFzZSkpO1xyXG5cclxuICAgIHRoaXMuX3VybCA9IHVybDtcclxuICAgIGNsZWFyLmNhbGwodGhpcyk7XHJcblxyXG4gICAgdmFyIGlucHV0ID0gdXJsLnJlcGxhY2UoL15bIFxcdFxcclxcblxcZl0rfFsgXFx0XFxyXFxuXFxmXSskL2csICcnKTtcclxuICAgIC8vIGVuY29kaW5nID0gZW5jb2RpbmcgfHwgJ3V0Zi04J1xyXG5cclxuICAgIHBhcnNlLmNhbGwodGhpcywgaW5wdXQsIG51bGwsIGJhc2UpO1xyXG4gIH1cclxuXHJcbiAgalVSTC5wcm90b3R5cGUgPSB7XHJcbiAgICB0b1N0cmluZzogZnVuY3Rpb24oKSB7XHJcbiAgICAgIHJldHVybiB0aGlzLmhyZWY7XHJcbiAgICB9LFxyXG4gICAgZ2V0IGhyZWYoKSB7XHJcbiAgICAgIGlmICh0aGlzLl9pc0ludmFsaWQpXHJcbiAgICAgICAgcmV0dXJuIHRoaXMuX3VybDtcclxuXHJcbiAgICAgIHZhciBhdXRob3JpdHkgPSAnJztcclxuICAgICAgaWYgKCcnICE9IHRoaXMuX3VzZXJuYW1lIHx8IG51bGwgIT0gdGhpcy5fcGFzc3dvcmQpIHtcclxuICAgICAgICBhdXRob3JpdHkgPSB0aGlzLl91c2VybmFtZSArXHJcbiAgICAgICAgICAgIChudWxsICE9IHRoaXMuX3Bhc3N3b3JkID8gJzonICsgdGhpcy5fcGFzc3dvcmQgOiAnJykgKyAnQCc7XHJcbiAgICAgIH1cclxuXHJcbiAgICAgIHJldHVybiB0aGlzLnByb3RvY29sICtcclxuICAgICAgICAgICh0aGlzLl9pc1JlbGF0aXZlID8gJy8vJyArIGF1dGhvcml0eSArIHRoaXMuaG9zdCA6ICcnKSArXHJcbiAgICAgICAgICB0aGlzLnBhdGhuYW1lICsgdGhpcy5fcXVlcnkgKyB0aGlzLl9mcmFnbWVudDtcclxuICAgIH0sXHJcbiAgICBzZXQgaHJlZihocmVmKSB7XHJcbiAgICAgIGNsZWFyLmNhbGwodGhpcyk7XHJcbiAgICAgIHBhcnNlLmNhbGwodGhpcywgaHJlZik7XHJcbiAgICB9LFxyXG5cclxuICAgIGdldCBwcm90b2NvbCgpIHtcclxuICAgICAgcmV0dXJuIHRoaXMuX3NjaGVtZSArICc6JztcclxuICAgIH0sXHJcbiAgICBzZXQgcHJvdG9jb2wocHJvdG9jb2wpIHtcclxuICAgICAgaWYgKHRoaXMuX2lzSW52YWxpZClcclxuICAgICAgICByZXR1cm47XHJcbiAgICAgIHBhcnNlLmNhbGwodGhpcywgcHJvdG9jb2wgKyAnOicsICdzY2hlbWUgc3RhcnQnKTtcclxuICAgIH0sXHJcblxyXG4gICAgZ2V0IGhvc3QoKSB7XHJcbiAgICAgIHJldHVybiB0aGlzLl9pc0ludmFsaWQgPyAnJyA6IHRoaXMuX3BvcnQgP1xyXG4gICAgICAgICAgdGhpcy5faG9zdCArICc6JyArIHRoaXMuX3BvcnQgOiB0aGlzLl9ob3N0O1xyXG4gICAgfSxcclxuICAgIHNldCBob3N0KGhvc3QpIHtcclxuICAgICAgaWYgKHRoaXMuX2lzSW52YWxpZCB8fCAhdGhpcy5faXNSZWxhdGl2ZSlcclxuICAgICAgICByZXR1cm47XHJcbiAgICAgIHBhcnNlLmNhbGwodGhpcywgaG9zdCwgJ2hvc3QnKTtcclxuICAgIH0sXHJcblxyXG4gICAgZ2V0IGhvc3RuYW1lKCkge1xyXG4gICAgICByZXR1cm4gdGhpcy5faG9zdDtcclxuICAgIH0sXHJcbiAgICBzZXQgaG9zdG5hbWUoaG9zdG5hbWUpIHtcclxuICAgICAgaWYgKHRoaXMuX2lzSW52YWxpZCB8fCAhdGhpcy5faXNSZWxhdGl2ZSlcclxuICAgICAgICByZXR1cm47XHJcbiAgICAgIHBhcnNlLmNhbGwodGhpcywgaG9zdG5hbWUsICdob3N0bmFtZScpO1xyXG4gICAgfSxcclxuXHJcbiAgICBnZXQgcG9ydCgpIHtcclxuICAgICAgcmV0dXJuIHRoaXMuX3BvcnQ7XHJcbiAgICB9LFxyXG4gICAgc2V0IHBvcnQocG9ydCkge1xyXG4gICAgICBpZiAodGhpcy5faXNJbnZhbGlkIHx8ICF0aGlzLl9pc1JlbGF0aXZlKVxyXG4gICAgICAgIHJldHVybjtcclxuICAgICAgcGFyc2UuY2FsbCh0aGlzLCBwb3J0LCAncG9ydCcpO1xyXG4gICAgfSxcclxuXHJcbiAgICBnZXQgcGF0aG5hbWUoKSB7XHJcbiAgICAgIHJldHVybiB0aGlzLl9pc0ludmFsaWQgPyAnJyA6IHRoaXMuX2lzUmVsYXRpdmUgP1xyXG4gICAgICAgICAgJy8nICsgdGhpcy5fcGF0aC5qb2luKCcvJykgOiB0aGlzLl9zY2hlbWVEYXRhO1xyXG4gICAgfSxcclxuICAgIHNldCBwYXRobmFtZShwYXRobmFtZSkge1xyXG4gICAgICBpZiAodGhpcy5faXNJbnZhbGlkIHx8ICF0aGlzLl9pc1JlbGF0aXZlKVxyXG4gICAgICAgIHJldHVybjtcclxuICAgICAgdGhpcy5fcGF0aCA9IFtdO1xyXG4gICAgICBwYXJzZS5jYWxsKHRoaXMsIHBhdGhuYW1lLCAncmVsYXRpdmUgcGF0aCBzdGFydCcpO1xyXG4gICAgfSxcclxuXHJcbiAgICBnZXQgc2VhcmNoKCkge1xyXG4gICAgICByZXR1cm4gdGhpcy5faXNJbnZhbGlkIHx8ICF0aGlzLl9xdWVyeSB8fCAnPycgPT0gdGhpcy5fcXVlcnkgP1xyXG4gICAgICAgICAgJycgOiB0aGlzLl9xdWVyeTtcclxuICAgIH0sXHJcbiAgICBzZXQgc2VhcmNoKHNlYXJjaCkge1xyXG4gICAgICBpZiAodGhpcy5faXNJbnZhbGlkIHx8ICF0aGlzLl9pc1JlbGF0aXZlKVxyXG4gICAgICAgIHJldHVybjtcclxuICAgICAgdGhpcy5fcXVlcnkgPSAnPyc7XHJcbiAgICAgIGlmICgnPycgPT0gc2VhcmNoWzBdKVxyXG4gICAgICAgIHNlYXJjaCA9IHNlYXJjaC5zbGljZSgxKTtcclxuICAgICAgcGFyc2UuY2FsbCh0aGlzLCBzZWFyY2gsICdxdWVyeScpO1xyXG4gICAgfSxcclxuXHJcbiAgICBnZXQgaGFzaCgpIHtcclxuICAgICAgcmV0dXJuIHRoaXMuX2lzSW52YWxpZCB8fCAhdGhpcy5fZnJhZ21lbnQgfHwgJyMnID09IHRoaXMuX2ZyYWdtZW50ID9cclxuICAgICAgICAgICcnIDogdGhpcy5fZnJhZ21lbnQ7XHJcbiAgICB9LFxyXG4gICAgc2V0IGhhc2goaGFzaCkge1xyXG4gICAgICBpZiAodGhpcy5faXNJbnZhbGlkKVxyXG4gICAgICAgIHJldHVybjtcclxuICAgICAgdGhpcy5fZnJhZ21lbnQgPSAnIyc7XHJcbiAgICAgIGlmICgnIycgPT0gaGFzaFswXSlcclxuICAgICAgICBoYXNoID0gaGFzaC5zbGljZSgxKTtcclxuICAgICAgcGFyc2UuY2FsbCh0aGlzLCBoYXNoLCAnZnJhZ21lbnQnKTtcclxuICAgIH0sXHJcblxyXG4gICAgZ2V0IG9yaWdpbigpIHtcclxuICAgICAgdmFyIGhvc3Q7XHJcbiAgICAgIGlmICh0aGlzLl9pc0ludmFsaWQgfHwgIXRoaXMuX3NjaGVtZSkge1xyXG4gICAgICAgIHJldHVybiAnJztcclxuICAgICAgfVxyXG4gICAgICAvLyBqYXZhc2NyaXB0OiBHZWNrbyByZXR1cm5zIFN0cmluZyhcIlwiKSwgV2ViS2l0L0JsaW5rIFN0cmluZyhcIm51bGxcIilcclxuICAgICAgLy8gR2Vja28gdGhyb3dzIGVycm9yIGZvciBcImRhdGE6Ly9cIlxyXG4gICAgICAvLyBkYXRhOiBHZWNrbyByZXR1cm5zIFwiXCIsIEJsaW5rIHJldHVybnMgXCJkYXRhOi8vXCIsIFdlYktpdCByZXR1cm5zIFwibnVsbFwiXHJcbiAgICAgIC8vIEdlY2tvIHJldHVybnMgU3RyaW5nKFwiXCIpIGZvciBmaWxlOiBtYWlsdG86XHJcbiAgICAgIC8vIFdlYktpdC9CbGluayByZXR1cm5zIFN0cmluZyhcIlNDSEVNRTovL1wiKSBmb3IgZmlsZTogbWFpbHRvOlxyXG4gICAgICBzd2l0Y2ggKHRoaXMuX3NjaGVtZSkge1xyXG4gICAgICAgIGNhc2UgJ2RhdGEnOlxyXG4gICAgICAgIGNhc2UgJ2ZpbGUnOlxyXG4gICAgICAgIGNhc2UgJ2phdmFzY3JpcHQnOlxyXG4gICAgICAgIGNhc2UgJ21haWx0byc6XHJcbiAgICAgICAgICByZXR1cm4gJ251bGwnO1xyXG4gICAgICB9XHJcbiAgICAgIGhvc3QgPSB0aGlzLmhvc3Q7XHJcbiAgICAgIGlmICghaG9zdCkge1xyXG4gICAgICAgIHJldHVybiAnJztcclxuICAgICAgfVxyXG4gICAgICByZXR1cm4gdGhpcy5fc2NoZW1lICsgJzovLycgKyBob3N0O1xyXG4gICAgfVxyXG4gIH07XHJcblxyXG4gIC8vIENvcHkgb3ZlciB0aGUgc3RhdGljIG1ldGhvZHNcclxuICB2YXIgT3JpZ2luYWxVUkwgPSBzY29wZS5VUkw7XHJcbiAgaWYgKE9yaWdpbmFsVVJMKSB7XHJcbiAgICBqVVJMLmNyZWF0ZU9iamVjdFVSTCA9IGZ1bmN0aW9uKGJsb2IpIHtcclxuICAgICAgLy8gSUUgZXh0ZW5zaW9uIGFsbG93cyBhIHNlY29uZCBvcHRpb25hbCBvcHRpb25zIGFyZ3VtZW50LlxyXG4gICAgICAvLyBodHRwOi8vbXNkbi5taWNyb3NvZnQuY29tL2VuLXVzL2xpYnJhcnkvaWUvaGg3NzIzMDIodj12cy44NSkuYXNweFxyXG4gICAgICByZXR1cm4gT3JpZ2luYWxVUkwuY3JlYXRlT2JqZWN0VVJMLmFwcGx5KE9yaWdpbmFsVVJMLCBhcmd1bWVudHMpO1xyXG4gICAgfTtcclxuICAgIGpVUkwucmV2b2tlT2JqZWN0VVJMID0gZnVuY3Rpb24odXJsKSB7XHJcbiAgICAgIE9yaWdpbmFsVVJMLnJldm9rZU9iamVjdFVSTCh1cmwpO1xyXG4gICAgfTtcclxuICB9XHJcblxyXG4gIHNjb3BlLlVSTCA9IGpVUkw7XHJcblxyXG59KShzZWxmKTsiXX0="}